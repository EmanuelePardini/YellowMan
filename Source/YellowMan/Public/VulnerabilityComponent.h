// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "Components/ActorComponent.h"
#include "VulnerabilityComponent.generated.h"


UCLASS( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )
class YELLOWMAN_API UVulnerabilityComponent : public UActorComponent
{
	GENERATED_BODY()

public:	
	// Sets default values for this component's properties
	UVulnerabilityComponent();
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly)
	bool IsVulnerable = true;
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float InvulnerabilityTimer = 0.f;
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	float InvulnerabilityDelay = 0.f;
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnVulnerabilityChanged, bool, IsVulnerable);
	FOnVulnerabilityChanged OnVulnerabilityChanged;
protected:
	// Called when the game starts
	virtual void BeginPlay() override;

public:	
	// Called every frame
	virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;
	UFUNCTION()
	void ManageInvulnerability(float DeltaTime);
	UFUNCTION()
	void SetIsVulnerable(bool NewState, float AddDelay = 0.f);
};
